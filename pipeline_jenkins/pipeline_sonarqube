pipeline {
    agent any 

    environment {
        SONAR_HOME = "/opt/sonar-scanner/bin/sonar-scanner"
    }

    stages {
        stage('Checkout SCM') {
            steps {
                echo "stage ==> [Checkingout SCM ......]"
                git branch: 'main', url: 'https://github.com/linux-best/python_repo'
            }
        }
        stage('Code Analysis') {
           steps {
                echo "stage ==> [Analysing the Code ......]"
                withSonarQubeEnv('localSonarqube') {
                            sh "${env.SONAR_HOME}"
                }
            }
        }
        stage('Quality Gate_Check') {
            steps {
                echo "stage ==> [Analysing the Code ......]"
                timeout(time: 15,unit: java.util.concurrent.TimeUnit.MINUTES) {
                    script{
                        def qg = waitForQualityGate()
                        if (qg.status != 'OK') {
                            error "Pipeline aborted due to quality gate failure: ${qg.status}"
                        }
                    }
                }
            }
        }
    }
    post {
        success {
            echo "Done !"
        }
        failure {
            echo "Fuck !!!"
        }
    }
}
